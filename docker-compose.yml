version: '2'
services:
    wkhtmltopdf:
        image: 'registry.code.go1.com.au/microservices/wkhtmltopdf:master'
    mysql:
        build: ./.data/resources/docker/mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: go1
            MYSQL_PASSWORD: go1
        volumes:
            - '/home/vagrant/monolith_data/mysql:/var/lib/mysql'
        ports:
            - '3306:3306'
    neo4j:
        image: neo4j
        environment:
            - NEO4J_AUTH=none
            - NEO4J_dbms_allow__upgrade=true
            - NEO4J_dbms_allowFormatMigration=true
        volumes:
            - '/home/vagrant/monolith_data/neo4j:/data'
        ports:
            - '7474:7474'
            - '7687:7687'
    queue:
        image: 'rabbitmq:3.6-management'
        environment:
            - RABBITMQ_DEFAULT_USER=go1
            - RABBITMQ_DEFAULT_PASS=go1
        ports:
            - '15672:15672'
    memcached:
        image: 'memcached:1.4-alpine'
    minio:
        image: 'minio/minio'
        volumes:
            - './.data/minio:/export'
        ports:
            - '9900:9900'
        environment:
            # https://docs.minio.io/docs/minio-server-configuration-guide
            - MINIO_ACCESS_KEY=7OOP3Q0CCOHE47YKT0Q2
            - MINIO_SECRET_KEY=HamwosY54TnccBOXES4+BI2k3toOAlhk5Ecjfi1I
            - MINIO_REGION=us-east-1
        command: server --address :9900 /export
    es:
        image: "go1com/ci-elasticsearch"
        volumes:
            - '/home/vagrant/monolith_data/elasticsearch:/usr/share/elasticsearch/data'
        ports:
            - '9200:9200'
        environment:
              - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    consumer:
        build: ./.data/resources/docker/consumer
        command:
            - /app/app
        links:
            - queue
            - web
        environment:
            - QUEUE_URL=amqp://go1:go1@queue:5672/
            - SERVICE_URL_PATTERN=http://web/GO1/SERVICE/consume
            - CONSUMER_activity=asm.#,note.#,group.#
            - CONSUMER_algolia=lo.create,lo.update,lo.delete,vote.#
            - CONSUMER_api=do.public-api.webhook-request,lo.#,enrolment.#,user.#,ro.create,ro.delete
            - CONSUMER_assessor=lo.delete,enrolment.delete,enrolment.create
            - CONSUMER_award=enrolment.#,plan.create,award.#
            - CONSUMER_cloudinary=lo.delete,user.delete,portal.delete
            - CONSUMER_enrolment=enrolment.#,group.item.create
            - CONSUMER_graphin=portal.#,user.#,lo.#,enrolment.#,tag.#,vote.#,group.#,ro.#,note.#
            - CONSUMER_index=portal.#,portal-config.#,user.#,lo.#,enrolment.#,ro.#,asm.assignment.#,asm.submission.#,group.#,eck.#,manual-record.#,transaction.#,quiz.user_answer.#,lo_group.#,coupon.#,credit.#,award.#,plan.#,custom-tag.update,activity.#,contract.#,metric.#
            - CONSUMER_lazy=do.#
            - CONSUMER_low=group.#
            - CONSUMER_notify=enrolment.#,user.#,note.#,ro.#,award.#,plan.#,asm.#,lo.#,group.#,portal.#
            - CONSUMER_oembed=lo.update
            - CONSUMER_quiz-rpc=user.update,enrolment.delete
            - CONSUMER_rules=portal.#,user.#,lo.#,enrolment.#,system.#
            - CONSUMER_scraping=scraping.#
            - CONSUMER_support=portal.update,portal#delete
            - CONSUMER_stash=stash.#
            - CONSUMER_history=history.#
            - CONSUMER_assignment=enrolment.update,enrolment.delete
            # - CONSUMER_eck=enrolment.delete,lo.delete,portal.delete,user.delete
        depends_on:
            - queue
        command: ["/wait-for-it.sh", "queue:5672", "-t", "0", "--", "/app/app"]
    worker:
        build: ./.data/resources/docker/worker
        command:
            - /app/app
        links:
            - queue
            - web
        environment:
            - QUEUE_URL=amqp://go1:go1@queue:5672/
            - SERVICE_URL_PATTERN=http://web/GO1/SERVICE/consume
        depends_on:
            - queue
        command: ["/wait-for-it.sh", "queue:5672", "-t", "0", "--", "/app/app"]
    web:
        build: ./.data/resources/docker/web
        links:
            - memcached
            - neo4j
            - mysql
            - queue
            - es
            - wkhtmltopdf
            - minio
        extra_hosts:
            - host:${MONOLITH_HOST_IP}
        ports:
            - '80:80'
        volumes:
            - './php/:/app/'
            - './php/vendor:/vendor/'
            - './.data/nginx/sites-available/:/etc/nginx/sites-available/'
            - './.data/nginx/autoload/:/autoload/'
        environment:
            - _DOCKER_RDS_DB_NAME=go1_dev
            - _DOCKER_RDS_HOSTNAME=mysql
            - _DOCKER_RDS_PASSWORD=root
            - _DOCKER_RDS_USERNAME=root
            - _DOCKER_GO1_DB_NAME=go1_dev
            - _DOCKER_GO1_HOSTNAME=mysql
            - _DOCKER_GO1_PASSWORD=root
            - _DOCKER_GO1_USERNAME=root
            - _DOCKER_CACHE_BACKEND=memcached
            - _DOCKER_CACHE_HOST=memcached
            - _DOCKER_CACHE_PORT=11211
            - MEMCACHED_HOST=memcached
            - MEMCACHED_PORT=11211
            - _DOCKER_QUEUE_HOST=queue
            - MONOLITH=1
            - ENV=dev
            - SERVICE_URL_PATTERN=http://web/GO1/SERVICE
            - ES_URL=http://es:9200
            - WKHTMLTOPDF_URL=http://wkhtmltopdf
            # Quiz's environments
            - APP_ENV=monolith
            # Scorm's environments
            - SCORMENGINE_ENDPOINT=http://host:9999/ScormEngineInterface/api/v1
            - SCORMENGINE_LAUNCH=http://host:9999
            # Quiz rpc's environments
            - DB_WRITE_DSN=mysql:host=mysql;dbname=quiz_dev;charset=utf8
            - DB_WRITE_USERNAME=root
            - DB_WRITE_PASSWORD=root
            - DB_READ_DSN=mysql:host=mysql;dbname=quiz_dev;charset=utf8
            - DB_READ_USERNAME=root
            - DB_READ_PASSWORD=root
            - ES_HOST=http://es:9200
            - GO1_USER=http://web/GO1/user
            # S3's environments: https://github.com/minio/cookbook/blob/master/docs/aws-sdk-for-php-with-minio.md
            - AWS_ACCESS_KEY_ID=7OOP3Q0CCOHE47YKT0Q2
            - AWS_SECRET_ACCESS_KEY=HamwosY54TnccBOXES4+BI2k3toOAlhk5Ecjfi1I
            - AWS_S3_VERSION=latest
            - AWS_S3_BUCKET=monolith
            - AWS_S3_ENDPOINT=http://host:9900
            - AWS_DEFAULT_REGION=us-east-1
        depends_on:
            - queue
